package com.example.vramba.evis17;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.provider.ContactsContract;

import java.sql.SQLException;
import java.util.Date;

/**
 * Created by Vramba on 9.5.2017..
 */
public class DatabaseHelper extends SQLiteOpenHelper {
    public static final String DATABASE_NAME = "Svirke.db";
    public static final String TABLE_NAME = "Svirke_table";
    public static final String COL1 = "ID";
    public static final String COL2 = "Naslov";
    public static final String COL3 = "Datum";
    public static final String COL4 = "KontaktOsoba";
    public static final String COL5 = "KontaktBroj";
    public static final String COL6 = "Lokacija";
    public static final String COL7 = "Pogodba";
    public static final String COL8 = "Zarada";

    //Konstruktor za kreiranje baze podataka
    public DatabaseHelper (Context context) {
        super(context, DATABASE_NAME, null, 1);
        //SQLiteDatabase db = this.getWritableDatabase();
    }

    //Osnovne metode
    @Override
    public void onCreate (SQLiteDatabase db) {
        db.execSQL("CREATE TABLE " + TABLE_NAME + " (ID INTEGER PRIMARY KEY AUTOINCREMENT, Naslov TEXT NULL, Datum DATETIME NULL, KontaktOsoba TEXT NULL, KontaktBroj TEXT NULL, Lokacija TEXT NULL, Pogodba TEXT NULL, Zarada TEXT NULL )");
    }

    @Override
    public void onUpgrade (SQLiteDatabase db, int oldVersion, int newVersion) {
        db.execSQL("DROP TABLE IF EXISTS " + TABLE_NAME);
        onCreate(db);
    }

    //INSERT METODA
    public boolean insertData(String Naslov, String Datum, String KontaktOsoba, String KontaktBroj, String Lokacija, String Pogodba, String Zarada){
        SQLiteDatabase db = this.getWritableDatabase();
        ContentValues contentValues = new ContentValues();
        contentValues.put(COL2, Naslov);
        contentValues.put(COL3, Datum);
        contentValues.put(COL4, KontaktOsoba);
        contentValues.put(COL5, KontaktBroj);
        contentValues.put(COL6, Lokacija);
        contentValues.put(COL7, Pogodba);
        contentValues.put(COL8, Zarada);
        long result = db.insert(TABLE_NAME, null, contentValues); //insert vraća -1 ako je unos neuspješan
        if (result == -1)
            return false;
        else
            return true;
    }

    //METODA ZA PRIKAZ PODATAKA
    public Cursor getAllData(){
        SQLiteDatabase db = this.getWritableDatabase();
        Cursor res = db.rawQuery("SELECT * FROM " + TABLE_NAME, null);
        return res;
    }

    //METODA ZA PROVJERU DATUMA
    public Cursor getDateData(String date) {
        SQLiteDatabase db = this.getWritableDatabase();
        Cursor cursor =
                db.query(true, TABLE_NAME, new String[]{COL1, COL2, COL3, COL4, COL5, COL6, COL7, COL8}, COL3 + " LIKE " + "'%" + date + "%'", null, null, null, null, null);
        if (cursor != null){
            cursor.moveToFirst();
        }
        return cursor;
    }

    //METODA ZA UPDATE
    public boolean updateData(String id, String Naslov, String Datum, String KontaktOsoba, String KontaktBroj, String Lokacija, String Pogodba, String Zarada){
        SQLiteDatabase db = this.getWritableDatabase();
        ContentValues contentValues = new ContentValues();
        contentValues.put(COL1, id);
        contentValues.put(COL2, Naslov);
        contentValues.put(COL3, Datum);
        contentValues.put(COL4, KontaktOsoba);
        contentValues.put(COL5, KontaktBroj);
        contentValues.put(COL6, Lokacija);
        contentValues.put(COL7, Pogodba);
        contentValues.put(COL8, Zarada);
        db.update(TABLE_NAME, contentValues, "ID = ?", new String[] { id } );
        return true;
    }

    //METODA ZA BRISANJE
    public Integer deleteData(String id){
        SQLiteDatabase db = this.getWritableDatabase();
        return db.delete(TABLE_NAME, "ID = ?", new String[] {id});

    }
}
